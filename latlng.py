import sys
import logging
import numpy as np

from flask import Flask, request, jsonify, make_response, current_app, \
        render_template
from datetime import datetime
from bus import bus
from flask.ext.cors import CORS

app = Flask(__name__)
app._static_folder = 'static'
app.logger.addHandler(logging.StreamHandler(sys.stdout))
app.logger.setLevel(logging.ERROR)


cors = CORS(app, resources={r"/latlng/*": {"origins": "*"}})

bus_stops = {'10813': [-0.0984574616503, 51.3760929581],
 '1164': [-0.118444497979, 51.4013254207],
 '1441': [-0.111505659588, 51.3886330116],
 '14622': [-0.11532824762, 51.4624163884],
 '15100': [-0.127886565845, 51.4190123595],
 '15101': [-0.123989076582, 51.4147954483],
 '15102': [-0.121592866634, 51.4076438324],
 '15104': [-0.11950429888, 51.4038783631],
 '15105': [-0.119676700562, 51.4045826277],
 '15106': [-0.114913800215, 51.3952345961],
 '15107': [-0.11553210181, 51.3969801748],
 '15108': [-0.112343246015, 51.3902831629],
 '15110': [-0.109847701645, 51.3852700354],
 '15111': [-0.109810411684, 51.3854762071],
 '15112': [-0.105002557406, 51.3804435319],
 '15113': [-0.105543171573, 51.3812706486],
 '15600': [-0.116078634973, 51.397672392],
 '15601': [-0.116431491604, 51.3985323057],
 '15602': [-0.124338321212, 51.4143423641],
 '1764': [-0.125571969079, 51.4407824751],
 '1832': [-0.126152002196, 51.4171141625],
 '1833': [-0.125982517711, 51.4166888287],
 '233': [-0.115405856121, 51.4615812932],
 '2395': [-0.118310807164, 51.457104709],
 '2396': [-0.117290454148, 51.4584641623],
 '2397': [-0.124384026922, 51.4469504235],
 '2398': [-0.124206586829, 51.4470645447],
 '2403': [-0.128448107265, 51.4344886475],
 '2404': [-0.128107076231, 51.4347350132],
 '24404': [-0.12409794984, 51.4128368122],
 '24458': [-0.116683862902, 51.4599112545],
 '25666': [-0.124897330957, 51.4428490159],
 '25856': [-0.12627682548, 51.4393819467],
 '25860': [-0.1314, 51.426],
 '25865': [-0.122319240572, 51.4099216073],
 '25866': [-0.111045335869, 51.3868990349],
 '26408': [-0.113722710611, 51.4653940474],
 '26981': [-0.114139104884, 51.3930998309],
 '27495': [-0.124399192964, 51.4420136921],
 '29450': [-0.125973752929, 51.4394040719],
 '3019': [-0.127855814657, 151.4359540074],
 '34317': [-0.0986220007597, 51.376976935],
 '35036': [-0.1299838254, 51.4240098003],
 '36915': [-0.128187303962, 51.4359413214],
 '37002': [-0.113524828085, 51.3923076216],
 '43': [-0.124782872705, 51.4445917934],
 '4417': [-0.108429081989, 51.3837723074],
 '4418': [-0.106964468152, 51.3826965352],
 '4419': [-0.117691517968, 51.4004050565],
 '4420': [-0.103303433434, 51.3787883688],
 '4425': [-0.123025903584, 51.4109221979],
 '464': [-0.127301848973, 51.4371861452],
 '466': [-0.128852152236, 51.4323458454],
 '468': [-0.130952681759, 51.4284676051],
 '4725': [-0.118725410395, 51.4561221893],
 '474': [-0.128477004147, 51.4211081165],
 '4865': [-0.128976847939, 51.4328154988],
 '4868': [-0.128833763159, 51.4211767434],
 '705': [-0.123659830764, 51.4488182923],
 '706': [-0.123845244639, 51.4488572201],
 '707': [-0.122142349293, 51.4510780932],
 '708': [-0.121203336418, 51.4522141324],
 '709': [-0.120004667886, 51.4540653832],
 '710': [-0.120066199108, 51.4543181809],
 '716': [-0.130636110595, 51.425297155],
 '807': [-0.114806220068, 151.3954037676],
 'BP1549': [-0.0991418093016, 51.3724080241],
 'BP1916': [-0.1005239738295, 51.3782397996],
 'BP2000': [-0.103297530305, 51.3785814995],
 'BP2081': [-0.1008475, 51.3734371],
 'R0417': [-0.124564874379, 51.4442915445],
 'R0525': [-0.112693017733, 51.3912150509],
 'R0543': [-0.121741799303, 51.4082217658],
 'R0852': [-0.101373059522, 51.3792517406],
 'SL33': [-0.0979575459402, 51.3735938459],
 'SL37': [-0.131136553845, 51.4285424576]
}

bus_stops_cors = bus_stops.values()

class LatLng:
    def __init__(self, lat, lng, weight):
        self.lat = lat
        self.lng = lng
        self.weight = weight

    def serialize(self):
        return {
            'lat': self.lat,
            'lng': self.lng,
            'weight': self.weight
        }

def get_latlng(start_datetime, end_datetime):
    # get bus stops' busyness
    normalize_factor = 1 
    time_map = np.load("data/Route-109-2014-05-BS-index.npy").item()
    mat = np.load("data/Route-109-2014-05-BS-occupation.npy")
    bus_stops_busyness = (bus.get_heat_map(time_map, mat, start_datetime,
            end_datetime) * normalize_factor).tolist()
    stop_busy_dict = dict(zip(bus_stops, bus_stops_busyness))
    return stop_busy_dict



@app.route('/latlng/')
def latlng():
    start_datetime_str = request.args.get('starttime')
    end_datetime_str = request.args.get('endtime')
    start_datetime = datetime.fromtimestamp(int(start_datetime_str))
    end_datetime = datetime.fromtimestamp(int(end_datetime_str))
    latlngs = []
    stop_busy_dict = get_latlng(start_datetime, end_datetime)
    for bus_stop, busyness in stop_busy_dict.items():
       lng = bus_stops[bus_stop][0]
       lat = bus_stops[bus_stop][1]
       weight = busyness
       latlng = LatLng(lat, lng, weight)
       latlngs.append(latlng.serialize())


    return jsonify(
        {
            'latlngs': latlngs,
        }
    )

@app.route('/')
def index():
    return render_template('index.html')
    # return app.send_static_file('index.html')

if __name__ == '__main__':
    app.run(debug=True)
